@function vw($target) {
  $vw-context: (1920 * 0.01) * 1px;
  @return ($target/$vw-context) * 1vw;
}
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}
@mixin adap($properties, $min-value, $max-value) {
  & {
    @each $property in $properties {
      #{$property}: #{vw($max-value)};
    }

    @media (max-width: 992px) {
      @each $property in $properties {
        #{$property}: calc(
          (
            #{$min-value} +
              #{strip-unit($max-value - $min-value)} *
              ((100vw - 320px) / #{992 - 320}) /
              2
          )
        );
      }
    }
  }
}
@mixin linkHover($backColor: #000) {
  & a {
    position: relative;
    &::before {
      content: "";
      width: 0%;
      height: 2px;
      position: absolute;
      bottom: -7px;
      background-color: $backColor;
      transition: width 0.3s ease;
    }
    &:hover {
      &::before {
        width: 100%;
      }
    }
  }
}
@mixin xs_5 {
  @media (max-width: 567px) {
    @content;
  }
}
@mixin md_7 {
  @media (max-width: 768px) {
    @content;
  }
}
@mixin lg_9 {
  @media (max-width: 991px) {
    @content;
  }
}
